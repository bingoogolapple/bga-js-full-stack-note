// 运算符的左右一定要加空格
// 两个数参与运算，如果只有一个数有单位，则最后的结果就以这个单位为准
// 两个数参与运算，如果两个数都有单位，而且不一样的单位，最后的结果以第一个值单位为准

@border-size: 1px + 4;

.box2 {
  width: 50vw * 2;
  height: 100px - 10;
  display: flex;
  flex-direction: column;
  background-color: red;
  border: @border-size solid (pink - #a11);
  > div {
    width: 100%;
    height: 50%;
    // 生成的是 .box2 > div:nth-child(1)
    // 如果有交集、伪类、伪元素选择器，则前面需要加 &，否则生成的是 .box2 > div :nth-child(1)，多了一个空格，变成了 .box2 下的 div 的所有后代元素的第一个了
    // &:nth-child(1) {
    //   background-color: green;
    // }
    // &:nth-child(2) {
    //   background-color: blue;
    // }

    // &:nth-of-type(1) {
    //   background-color: green;
    // }
    // &:nth-of-type(2) {
    //   background-color: blue;
    // }

    // &:first-of-type {
    //   background-color: green;
    // }
    // &:last-of-type {
    //   background-color: blue;
    // }

    &:first-child {
      background-color: green;
    }
    &:last-child {
      background-color: blue;
    }
  }
  // 生成的是 .box2 > div:nth-child(1)
  //   > div:nth-child(1) {
  //     background-color: green;
  //   }
  // 生成的是 .box2 > :nth-child(1)
  //   > :nth-child(2) {
  //     background-color: blue;
  //   }
}

/*
.box2 > div:nth-of-type(1) {
background-color: green;
}
.box2 > :nth-of-type(2) {
background-color: blue;
}
*/

/*
.box2 > div:nth-child(1) {
background-color: green;
}
.box2 > :nth-child(2) {
background-color: blue;
}
*/

/*
.box2 > div:first-child {
  background-color: green;
}
.box2 > :last-child {
  background-color: blue;
}
*/
